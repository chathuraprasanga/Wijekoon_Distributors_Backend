name: Deploy Wijekoon Distributors Backend to Droplet

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Wijekoon Distributors Prod Backend Deployment
    runs-on: ubuntu-latest

    steps:
      # Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up SSH agent
      - name: Set up SSH agent
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.PRIVATE_KEY }}

      # Test SSH connection
      - name: Test SSH Connection
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.DROPLET_USER }}@${{ secrets.DROPLET_HOST }} "echo 'SSH connection successful!'"

      # Kill unnecessary user sessions
      - name: Kill unnecessary user sessions
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.DROPLET_USER }}@${{ secrets.DROPLET_HOST }} << 'EOF'
            current_user=$(whoami)
            current_pid=$$
            user_pids=$(ps -u $current_user -o pid=)

            for pid in $user_pids; do
              if [ "$pid" != "$current_pid" ]; then
                if ! ps -p $pid -o comm= | grep -E 'sshd|screen|tmux' > /dev/null; then
                  echo "Killing PID: $pid"
                  sudo kill -9 $pid || echo "Failed to kill PID: $pid"
                else
                  echo "Skipping PID: $pid (Necessary session)"
                fi
              fi
            done
          EOF

      # Deploy backend Prod to Droplet
      - name: Deploy Wijekoon Distributors Prod Backend to Droplet
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.DROPLET_USER }}@${{ secrets.DROPLET_HOST }} << 'EOF'
            set -e
            export NVM_DIR="$HOME/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
            [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"
            nvm use node

            cd /var/www/wijekoon-distributors/backend
            rm -rf dist
            git reset --hard
            git pull origin main

            npm install --force
            npm run lint
            npm run build

            export NODE_OPTIONS="--max_old_space_size=512"
            pm2 describe "wd-server" >/dev/null 2>&1 || pm2 start npm --name "wd-server" -- start
            pm2 restart "wd-server" --update-env
            pm2 save

            npm cache clean --force
          EOF

      # Restart backend Qa server
      - name: Deploy Wijekoon Distributors Qa Backend to Droplet
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.DROPLET_USER }}@${{ secrets.DROPLET_HOST }} << 'EOF'
            set -e
            export NVM_DIR="$HOME/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
            [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"
            nvm use node

            cd /var/www/qa/qa-wd-server
            pm2 describe "wd-server-qa" >/dev/null 2>&1 || pm2 start npm --name "wd-server-qa" -- run qa
            pm2 restart "wd-server-qa" --update-env
            pm2 save
          EOF

      # Restart Nginx
      - name: Restart Nginx
        run: |
          ssh -o ServerAliveInterval=60 -o StrictHostKeyChecking=no ${{ secrets.DROPLET_USER }}@${{ secrets.DROPLET_HOST }} << 'EOF'
            sudo systemctl restart nginx.service
          EOF
